{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n  // private url = 'http://localhost:3000/api/cart-items'\n\n  // public getAllItems(): Observable<any> {\n  //   return this.http.get(this.url);\n  // }\n\n\n\n  getItems() {\n    return this.http.get(\"/api/items\", { responseType : \"json\"});\n\n  }\n\n  addItems(newItemsId, newItemsName, newItemsPrice, newItemsQuanity) {\n    return this.http.post(\"/api/animals\", \n    { id: newItemsId, product: newItemsName, price: newItemsPrice, quanity: newItemsQuanity  },\n    {responseType: \"json\"});\n  }\n\n  deleteItem(product){\n    return this.http.delete(`/api/items/${product}`, { responseType: \"json\"});\n  }\n\n  updateItem( newProduct, oldProduct){\n      return this.http.put(`/api/items/${oldProduct}`, { name: newProduct}, { responseType: \"json\"});\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>Cart Items</h1>\\n\\n<div class=\\\"container\\\">\\n  <div *ngFor=\\\"let item of items | async\\\" class=\\\"cart-item\\\">\\n    <h2>{{items.product}}</h2>\\n    <div>\\n      Price: \\n      {{items.price}}\\n    </div>\\n    <div>\\n      Quantity:\\n      {{items.quantity}}\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<h1>Hello</h1>\"","import { Component } from '@angular/core';\nimport { ApiService} from './api.service';\n\n\n\n@Component({\n  selector: 'root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'express-project';\n  items: any;\n\n  constructor(private apiService: ApiService) {\n    this.apiService.getItems().subscribe(response => {\n      this.items = response;\n    });\n  }\n\n  addNewItem(newItemsId, newItemsName, newItemsPrice, newItemsQuanity) {\n    this.apiService.addItems(newItemsId, newItemsName, newItemsPrice\n      ,newItemsQuanity   ).subscribe(response => {\n      this.items = response;\n    });\n  }\n\n  deleteItem(product){\n    this.apiService.deleteItem(product).subscribe(response => {\n      this.items = response;\n    })\n  }\n\n  updateItem(newProduct, oldProduct) {\n    this.apiService.updateItem(newProduct, oldProduct).subscribe(response => {\n      this.items = response;\n    })\n  }\n\n\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}